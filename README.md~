# compiler-book
rui ueyama さんのオンラインブックの進捗

## 用語のメモ

### スタックポインタ

スタックはスタックの1番上のアドレスを保存する1つの変数のみを使って実装することができる。  
スタックトップを保持している記憶領域のことを __スタックポインタ__ という。  
x86-64 では関数を使ったプログラミングをサポートするために、スタックポインタ専用のレジスタと  
そのレジスタを利用する命令をサポートしている。  
スタックにデータを積むことを __プッシュ__ 、  
スタックに積まれたデータを取り出すことを __ポップ__  という。  

関数呼び出しの実例  

```
int plus(int x, int y) {
  return x + y;
}

int main() {
  return plus(3, 4);
}
```

上記のコードに対応するアセンブリ。  

アセンブラにおいては第一引数は RDI レジスタ  
第二引数は RSI レジスタに入れるという約束になっている  
call 命令が実行されると  

1. 次の命令のアドレスをスタックにプッシュ
2. call の引数として与えられたアドレスにジャンプ

```
.intel_syntax noprefix
.global plus, main

plus:

	add rsi, rdi
	mov rax, rsi
	ret
```